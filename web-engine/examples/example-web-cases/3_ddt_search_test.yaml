desc: 数据驱动搜索测试 - 多关键词搜索验证

pre_script:
  - 'keyword = caseinfo.get("context", {}).get("search_keyword", "未知关键词"); print(f"=== 开始数据驱动测试：{keyword} ===")'

steps:
  # ========== 步骤1：初始化浏览器 ==========
  - 打开browser:
      关键字: open_browser
      browser: "{{BROWSER}}"
      headless: "{{HEADLESS}}"
      implicit_wait: "{{IMPLICIT_WAIT}}"
      window_size: "{{WINDOW_SIZE}}"
  
  # ========== 步骤2：访问百度首页 ==========
  - 导航到百度:
      关键字: navigate_to
      url: "{{BASE_URL}}"
  
  # ========== 步骤2.5：等待搜索框出现 ==========
  - 等待搜索框加载:
      关键字: wait_for_element_visible
      locator_type: id
      element: "{{BAIDU_SEARCH_INPUT}}"
      timeout: "{{DEFAULT_TIMEOUT}}"
  
  # ========== 步骤3：输入搜索关键词 ==========
  - 输入搜索词:
      关键字: input_text
      locator_type: id
      element: "{{BAIDU_SEARCH_INPUT}}"
      text: "{{search_keyword}}"
      clear: false
  
  # ========== 步骤4：点击搜索按钮 ==========
  - 点击搜索:
      关键字: click_element
      locator_type: id
      element: "{{BAIDU_SEARCH_BUTTON}}"
  
  # ========== 步骤5：等待搜索结果 ==========
  - 等待结果:
      关键字: wait_for_element_visible
      locator_type: id
      element: "{{BAIDU_RESULT_CONTAINER}}"
      timeout: 15
  
  # ========== 步骤6：断言搜索结果 ==========
  - 断言包含关键词:
      关键字: assert_text_contains
      locator_type: id
      element: "{{BAIDU_RESULT_CONTAINER}}"
      期望text: "{{expected_text}}"
  
  # ========== 步骤7：截图保存证据 ==========
  - 截图:
      关键字: take_screenshot
      filename: "search_{{search_keyword}}_result"
  
  # ========== 步骤8：清理环境 ==========
  - 关闭browser:
      关键字: close_browser

post_script:
  - 'keyword = caseinfo.get("context", {}).get("search_keyword", ""); print(f"=== 数据驱动测试完成：{keyword} ===")'

# ==================== 数据驱动测试数据 ====================
ddts:
  - desc: 搜索Python编程语言
    search_keyword: Python
    expected_text: Python
  
  - desc: 搜索Java编程语言
    search_keyword: Java
    expected_text: Java
  
  - desc: 搜索Selenium测试工具
    search_keyword: Selenium
    expected_text: Selenium


