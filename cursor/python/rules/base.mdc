---
description: Python项目基础检查规则 - 代码生成前业务服务检查规则
globs: "*.py"
alwaysApply: true
---

# Python业务代码生成检查规则

## 核心原则
**严格要求：在生成任何业务代码之前，AI必须主动使用read_file工具查看 [func.md](mdc:func.md) 文档，全面确认是否已有相关的业务服务或功能。**

## 强制检查流程
### 第一步：必须主动查看func.md
- **强制要求**：使用read_file工具查看完整的func.md文档
- **检查范围**：Service层、Repository层、Model层、Utils层、API路由层
- **检查目的**：确认是否已有相关功能或类似方法

### 第二步：逐层分析现有功能
1. **服务层检查**: 查看 `Service层` 部分，确认是否已有类似的业务服务
2. **Repository层检查**: 查看 `Repository层` 部分，确认是否已有相关的数据访问接口
3. **Model层检查**: 查看 `Model层` 部分，确认是否已有相关的数据模型
4. **Utils层检查**: 查看 `Utils层` 部分，确认是否已有相关的工具函数
5. **API路由检查**: 查看 `API路由层` 部分，确认是否已有相关的接口定义

### 第三步：代码复用决策
- **优先级1**：如果发现已有完全匹配的功能，直接复用现有代码
- **优先级2**：如果发现已有类似功能，在现有模块中扩展方法
- **优先级3**：如果发现相关但不完全匹配的功能，评估是否可以重构复用
- **最后选择**：只有在确认没有任何相关功能时，才创建新的模块或服务

## 具体检查示例
### 用户相关功能开发
- **必查项目**：UserService、AuthService的所有方法
- **检查内容**：用户登录、注册、信息管理、密码管理等
- **复用策略**：优先使用现有用户服务，避免创建新的用户管理功能

### 数据库相关功能开发
- **必查项目**：各种Repository、DatabaseManager的所有方法
- **检查内容**：CRUD操作、查询方法、事务管理等
- **复用策略**：数据库相关操作必须使用现有Repository

### API相关功能开发
- **必查项目**：各种Router、Controller的所有方法
- **检查内容**：路由定义、请求处理、响应格式等
- **复用策略**：API相关功能必须基于现有路由扩展

### 工具相关功能开发
- **必查项目**：Utils模块、Helper函数等
- **检查内容**：数据处理、格式转换、验证逻辑等
- **复用策略**：工具函数优先使用现有实现

## 违规检查机制
### 发现重复开发的处理
1. **立即停止**：一旦发现已有相关功能，立即停止新开发
2. **重新分析**：分析现有功能是否满足需求
3. **选择策略**：确定是复用、扩展还是重构
4. **重新实施**：基于选定策略重新实施

### 检查不充分的后果
- **代码冗余**：造成系统中存在重复功能
- **维护困难**：增加后续维护和bug修复的复杂度
- **性能问题**：重复的数据库查询和业务逻辑
- **团队效率下降**：浪费开发时间和资源

## 命名规范参考
参考func.md中现有服务的命名模式：
- Service层：`{业务域}Service`
- Repository层：`{业务域}Repository`  
- Model层：`{业务域}Model`
- Utils层：`{功能}Utils`
- Router层：`{业务域}Router`

## Python包管理检查
### 依赖重复检查
- **requirements.txt检查**：避免重复添加已存在的包
- **poetry.toml检查**：确认依赖版本兼容性
- **虚拟环境检查**：确保在正确的虚拟环境中工作

### 导入语句检查
- **避免重复导入**：检查是否已有相同的导入语句
- **导入顺序规范**：标准库、第三方库、本地模块的导入顺序
- **相对导入检查**：确保相对导入路径正确

## 文档同步要求
- **每次新增服务**：必须同步更新func.md文档
- **每次修改方法**：必须同步更新相关服务的功能描述
- **每次重构**：必须更新相关的文档说明

## 执行检查清单
在开始任何代码开发前，请确认：
- [ ] 已使用read_file工具查看完整的func.md文档
- [ ] 已逐层检查Service、Repository、Model、Utils、Router层
- [ ] 已确认没有重复或类似的现有功能
- [ ] 已选择合适的复用或扩展策略
- [ ] 已检查Python包依赖和导入语句
- [ ] 已准备在完成后更新func.md文档

**重要提醒：违反此检查流程将导致代码重复、系统冗余和维护困难，必须严格遵守！**
